package day0906;
// 자바는 3세대 언어들 중에서 가장 문법이 엄격한 언어이다.
// 그렇기 때문에 대소문자가 틀리면 의미가 달라지거나 심지어 에러가 발생하게 된다.
// 따라서, 대소문자를 정확하게 구분하여 코드를 입력하는 것이 매우 중요하다.

// 자바의 명명규칙을 알아보자
// 공통규칙
// 1. 자바의 이름에는 _ 를 제외한 특수문자는 사용할수 없다.
//    예시: ★specialNumber★ -> 특수문자가 들어갔으므로 에러가 발생
// 2. 자바의 이름은 숫자로 시작할 수 없다.
//    예시: 1Number, 2Number -> 둘다 1과 2라는 숫자로 이름이 시작되었으므로 에러가 발생
//         Number1, Number2 -> 사용 가능
// 3. 자바에서 사용되는 50여가지의 예약어(=keyword)와 일치하는
//    이름은 사용할 수 없다.
//    예시: public 이라는 단어는 예약어 이므로 만약 해당 하는 뜻을 가진 이름을 지어줄 때에는
//         동의어를 사용하거나 뒤에 단어를 더 붙여서 변형시키면 사용가능하다.

// 낙타등 표기법과 뱀 표기법
// 낙타등 표기법(Camel back notation)
// 낙타등 표기법이란, 이름이 여러 단어로 이루어져 있을 경우, 
// 단어들간의 구분을 위해 두번째 단어부터는 첫글자를 대문자로 적어주는 것을
// 낙타등 표기법이라고 한다.

// 뱀 표기법(Snake notation)
// 뱀 표기법이란, 모든 철자를 대문자로 표시해야하는 경우,
// 단어들간의 구분을 위해 단어들 사이에 _를 넣어서 구분시키는 것을
// 뱀 표기법 이라고 한다.

// 클래스 명명규칙: 클래스는 대문자로 시작하고 낙타등 표기법을 따르는 명사이다.
// 패키지 명명규칙: 패키지는 소문자로 시작하고 낙타등 표기법을 따르는 명사이다.
//              단, 해당 패키지 내부에 있는 클래스들을 한 단어로 규정해서 이름지어주면 된다.
// 상수 명명규칙: 상수는 뱀 표기법을 따르는 명사이다.
// 메소드 명명규칙: 메소드는 소문자로 시작하고 낙타등 표기법을 따르는 동사이다.
//              단, 프로그래밍의 문법상 메소드는 반드시 이름뒤에 () 가 붙는다.
// 변수 명명규칙: 변수는 소문자로 시작하고 낙타등 표기법을 따르는 명사이다.
public class Ex01Naming {
    

}

















